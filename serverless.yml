service: serverless-toDoList-service

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1

  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}  
    MONGOLAB_URL_TODO: ${file(env.yml):dev.MONGOLAB_URL_TODO}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  createUser:
    handler: user/create.createUser
    events:
      - http:
          path: users
          method: post
          cors: true
  
  findAllUser:
    handler: user/fetch.findAllUsers
    events:
      - http:
          path: users
          method: get
          cors: true
  
  findOneUser:
    handler: user/fetch.findOneUser
    events:
      - http:
          path: users/{userId}
          method: get
          cors: true

  updateUser:
    handler: user/update.editUser
    events:
     - http:
        path: users/{userId}
        method: put
        cors: true

  deleteUser:
    handler: user/delete.deleteUser
    events:
      - http:
          path: users/{userId}
          method: delete
          cors: true

  createTask:
    handler: task/create.createTask
    events:
      - http:
          path: users/{userId}/tasks
          method: post
          cors: true
  
  findAllTask:
    handler: user/fetch.findAllTasks
    events:
      - http:
          path: users/{userId}/tasks
          method: get
          cors: true
  
  findOneTask:
    handler: user/fetch.findOneTask
    events:
      - http:
          path: users/{userId}/tasks/{taskId}
          method: get
          cors: true

  updateTask:
    handler: user/update.editTask
    events:
     - http:
        path: users/{userId}/tasks/{taskId}
        method: put
        cors: true

  deleteTask:
    handler: task/delete.deleteTask
    events:
      - http:
          path: users/{userId}/tasks/{taskId}
          method: delete
          cors: true

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
